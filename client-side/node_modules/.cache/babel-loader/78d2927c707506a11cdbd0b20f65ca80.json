{"ast":null,"code":"var _jsxFileName = \"/Users/shreysharma/Documents/development/nanoleaf-interview/client-side/src/App.js\";\nimport React, { Component } from \"react\";\nimport StudentDataService from \"./services/student.service\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async () => {\n      // store the states in the form data\n      const loginFormData = new FormData();\n      loginFormData.append(\"name\", formValue.name);\n      loginFormData.append(\"gender\", formValue.gender);\n      loginFormData.append(\"DOB\", formValue.DOB);\n      loginFormData.append(\"specialized\", formValue.specialized);\n\n      try {\n        // make axios post request\n        StudentDataService.create(loginFormData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleChange = event => {\n      setformValue({ ...formValue,\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      students: []\n    };\n    const [_formValue, _setformValue] = React.useState({\n      name: '',\n      gender: '',\n      DOB: '',\n      specialized: ''\n    });\n  }\n\n  componentDidMount() {\n    this.fetchAllStudents();\n  }\n\n  fetchAllStudents() {\n    StudentDataService.getAll().then(response => {\n      this.setState({\n        students: response.data\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), this.state.students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Date(student.DOB)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: student.specialized\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add a new student form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            placeholder: \"enter an name\",\n            value: formValue.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"gender\",\n            name: \"gender\",\n            placeholder: \"enter a gender\",\n            value: formValue.gender,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"dob\",\n            placeholder: \"enter a date of birth\",\n            value: formValue.dob,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"specialized\",\n            placeholder: \"enter an specialization\",\n            value: formValue.specialized,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shreysharma/Documents/development/nanoleaf-interview/client-side/src/App.js"],"names":["React","Component","StudentDataService","App","constructor","props","handleSubmit","loginFormData","FormData","append","formValue","name","gender","DOB","specialized","create","error","console","log","handleChange","event","setformValue","target","value","state","students","useState","componentDidMount","fetchAllStudents","getAll","then","response","setState","data","catch","e","render","map","student","id","Date","dob"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport StudentDataService from \"./services/student.service\";\nimport './App.css';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {students: []};\n    const [formValue, setformValue] = React.useState({\n      name: '',\n      gender: '',\n      DOB: '',\n      specialized: ''\n    });\n  }\n\n  componentDidMount(){\n    this.fetchAllStudents();\n  }\n\n  fetchAllStudents() {\n    StudentDataService.getAll()\n      .then(response => {\n        this.setState({\n          students: response.data\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  handleSubmit = async() => {\n    // store the states in the form data\n    const loginFormData = new FormData();\n    loginFormData.append(\"name\", formValue.name)\n    loginFormData.append(\"gender\", formValue.gender)\n    loginFormData.append(\"DOB\", formValue.DOB)\n    loginFormData.append(\"specialized\", formValue.specialized)\n  \n    try {\n      // make axios post request\n      StudentDataService.create(loginFormData)\n    } catch(error) {\n      console.log(error)\n    }\n  }\n\n  handleChange = (event) => {\n    setformValue({\n      ...formValue,\n      [event.target.name]: event.target.value\n    });\n  }\n  \n    render() {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <table class='table'>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n                <th>Gender</th>\n                <th>Date of Birth</th>\n                <th>Specialization</th>\n              </tr>\n            {this.state.students.map(student => \n              <tr>\n                <td>{student.id}</td>\n                <td>{student.name}</td>\n                <td>{student.gender}</td>\n                <td>{Date(student.DOB)}</td>\n                <td>{student.specialized}</td>\n              </tr>\n              )}\n            </table>\n            <form onSubmit={handleSubmit}>\n              <p>Add a new student form</p>\n              <input\n                name=\"name\"\n                placeholder=\"enter an name\"\n                value={formValue.name}\n                onChange={handleChange}\n              />\n              <input\n                type=\"gender\"\n                name=\"gender\"\n                placeholder=\"enter a gender\"\n                value={formValue.gender}\n                onChange={handleChange}\n              />\n              <input\n                type=\"date\"\n                name=\"dob\"\n                placeholder=\"enter a date of birth\"\n                value={formValue.dob}\n                onChange={handleChange}\n              />\n              <input\n                name=\"specialized\"\n                placeholder=\"enter an specialization\"\n                value={formValue.specialized}\n                onChange={handleChange}\n              />\n              <button type=\"submit\">\n                Login\n              </button>\n          </form>\n          </header>\n        </div>\n      );\n    }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}